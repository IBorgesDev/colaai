# Production Docker Compose configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  app:
    build:
      target: production
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://eventplatform:${POSTGRES_PASSWORD}@postgres:5432/eventplatform
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
    restart: always
    # Remove development volumes
    volumes: []
    # Production command
    command: ["node", "server.js"]
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  postgres:
    environment:
      - POSTGRES_DB=eventplatform
      - POSTGRES_USER=eventplatform
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    # Production volume configuration
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eventplatform -d eventplatform"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      app:
        condition: service_healthy
    restart: always
    networks:
      - eventplatform-network

  # Redis for production caching
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    # Redis configuration
    command: redis-server --appendonly yes --maxmemory 100mb --maxmemory-policy allkeys-lru
    networks:
      - eventplatform-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  eventplatform-network:
    driver: bridge 